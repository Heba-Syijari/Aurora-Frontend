'use client';

import { Box, Card, Grid, MobileStepper, Stack, Step, StepLabel, Typography } from '@mui/material';
import { useMemo } from 'react';
import Iconify from 'src/components/iconify';
import { Audience } from '../audience';
import FinishSection from '../finish-section';
import useGeneratorView from '../hooks/use-generator-view';
import { IntellectualProperty } from '../intellectual-property';
import { Plugins } from '../plugins';
import { Purpose } from '../purpose';
import { SectionSelection } from '../section-selection';
import { Story } from '../story';
import { Type } from '../type';
import { WebsiteDesign } from '../website-design';
import { WebsiteInfo } from '../website-info';

// ----------------------------------------------------------------------

export default function GeneratorView() {
  const { activeStep, back, createProject, getData, updateData, loading } = useGeneratorView();

  const steps = useMemo(
    () => [
      {
        label: 'Website Type',
        component: (
          <Type
            projectType={getData('type')}
            onSubmitClicked={(type) => {
              updateData('type', type);
            }}
          />
        ),
      },
      {
        label: 'Purpose',
        component: (
          <Purpose
            purpose={getData('purpose')}
            onSubmitClicked={(purpose) => {
              updateData('purpose', purpose);
            }}
            onCancelClicked={back}
          />
        ),
      },
      {
        label: 'Story',
        component: (
          <Story
            data={getData('websiteStory')}
            onSubmitClicked={(websiteStory) => {
              updateData('websiteStory', websiteStory);
            }}
            onCancelClicked={back}
          />
        ),
      },
      {
        label: 'Website Info',
        component: (
          <WebsiteInfo
            data={getData('websiteInfo')}
            onSubmitClicked={(websiteInfo) => {
              updateData('websiteInfo', websiteInfo);
            }}
            onCancelClicked={back}
          />
        ),
      },
      {
        label: 'Intellectual Property',
        component: (
          <IntellectualProperty
            data={getData('intellectualProperty')}
            onSubmitClicked={(intellectualProperty) => {
              updateData('intellectualProperty', intellectualProperty);
            }}
            onCancelClicked={back}
          />
        ),
      },
      {
        label: 'Audience',
        component: (
          <Audience
            data={getData('websiteAudience')}
            onSubmitClicked={(websiteAudience) => {
              updateData('websiteAudience', websiteAudience);
            }}
            onCancelClicked={back}
          />
        ),
      },
      {
        label: 'Plugins',
        component: (
          <Plugins
            data={getData('websitePlugins')}
            onSubmitClicked={(websitePlugins) => {
              updateData('websitePlugins', websitePlugins);
            }}
            onCancelClicked={back}
          />
        ),
      },
      {
        label: 'Section Selection',
        component: (
          <SectionSelection
            data={getData('WebsiteSections')}
            onSubmitClicked={(websiteSections) => {
              updateData('WebsiteSections', websiteSections);
            }}
            onCancelClicked={back}
          />
        ),
      },
      {
        label: 'Design',
        component: (
          <WebsiteDesign
            data={getData('websiteDesign')}
            onSubmitClicked={(websiteDesign) => {
              updateData('websiteDesign', websiteDesign);
            }}
            onCancelClicked={back}
          />
        ),
      },
    ],
    [back, getData, updateData]
  );
  const renderStepImage = (step: number, fillColor: string) => {
    switch (step) {
      case 1:
        return (
          <Box
            component="svg"
            width="20px"
            height="22px"
            viewBox="0 0 22 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M11 1.75C5.89137 1.75 1.75 5.89137 1.75 11C1.75 16.1086 5.89137 20.25 11 20.25C16.1086 20.25 20.25 16.1086 20.25 11C20.25 10.0319 20.1015 9.0999 19.8267 8.22474C19.7025 7.82956 19.9223 7.40858 20.3175 7.28446C20.7126 7.16034 21.1336 7.38008 21.2577 7.77526C21.5778 8.79419 21.75 9.87769 21.75 11C21.75 16.9371 16.9371 21.75 11 21.75C5.06294 21.75 0.25 16.9371 0.25 11C0.25 5.06294 5.06294 0.25 11 0.25C12.1743 0.25 13.3061 0.43857 14.3658 0.787653C14.7592 0.917248 14.9731 1.34123 14.8435 1.73465C14.7139 2.12807 14.2899 2.34194 13.8965 2.21235C12.9863 1.91253 12.0129 1.75 11 1.75Z"
              fill={fillColor}
            />
            <path
              d="M11 6.75C8.65279 6.75 6.75 8.65279 6.75 11C6.75 13.3472 8.65279 15.25 11 15.25C13.3472 15.25 15.25 13.3472 15.25 11C15.25 10.5858 15.5858 10.25 16 10.25C16.4142 10.25 16.75 10.5858 16.75 11C16.75 14.1756 14.1756 16.75 11 16.75C7.82436 16.75 5.25 14.1756 5.25 11C5.25 7.82436 7.82436 5.25 11 5.25C11.4142 5.25 11.75 5.58579 11.75 6C11.75 6.41421 11.4142 6.75 11 6.75Z"
              fill={fillColor}
            />
            <path
              d="M19.25 1C19.25 0.585786 18.9142 0.25 18.5 0.25C18.0858 0.25 17.75 0.585786 17.75 1V3.18934L10.4697 10.4697C10.1768 10.7626 10.1768 11.2374 10.4697 11.5303C10.7626 11.8232 11.2374 11.8232 11.5303 11.5303L18.8107 4.25H21C21.4142 4.25 21.75 3.91421 21.75 3.5C21.75 3.08579 21.4142 2.75 21 2.75H19.25V1Z"
              fill={fillColor}
            />
          </Box>
        );

      case 2:
        return (
          <Box
            component="svg"
            width="20px"
            height="22px"
            viewBox="0 0 22 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12 11.25C11.5858 11.25 11.25 11.5858 11.25 12C11.25 12.4142 11.5858 12.75 12 12.75H16C16.4142 12.75 16.75 12.4142 16.75 12C16.75 11.5858 16.4142 11.25 16 11.25H12Z"
              fill={fillColor}
            />
            <path
              d="M11.25 16C11.25 15.5858 11.5858 15.25 12 15.25H14C14.4142 15.25 14.75 15.5858 14.75 16C14.75 16.4142 14.4142 16.75 14 16.75H12C11.5858 16.75 11.25 16.4142 11.25 16Z"
              fill={fillColor}
            />
            <path
              d="M5.99976 4C5.44747 4 4.99976 4.44772 4.99976 5C4.99976 5.55228 5.44747 6 5.99976 6H6.00874C6.56102 6 7.00874 5.55228 7.00874 5C7.00874 4.44772 6.56102 4 6.00874 4H5.99976Z"
              fill={fillColor}
            />
            <path
              d="M8.99976 5C8.99976 4.44772 9.44747 4 9.99976 4H10.0087C10.561 4 11.0087 4.44772 11.0087 5C11.0087 5.55228 10.561 6 10.0087 6H9.99976C9.44747 6 8.99976 5.55228 8.99976 5Z"
              fill={fillColor}
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M10.9428 0.75H11.0572C13.2479 0.749987 14.9686 0.749976 16.312 0.930594C17.6886 1.11568 18.7809 1.50272 19.6391 2.36091C20.4973 3.21911 20.8843 4.31137 21.0694 5.68802C21.25 7.03144 21.25 8.7521 21.25 10.9428V11.0572C21.25 13.2479 21.25 14.9686 21.0694 16.312C20.8843 17.6886 20.4973 18.7809 19.6391 19.6391C18.7809 20.4973 17.6886 20.8843 16.312 21.0694C14.9686 21.25 13.2479 21.25 11.0572 21.25H10.9428C9.91754 21.25 8.99517 21.25 8.16628 21.2315C8.11279 21.2436 8.05715 21.25 8 21.25C7.92904 21.25 7.86038 21.2401 7.79531 21.2217C7.00667 21.1975 6.30727 21.1527 5.68802 21.0694C4.31137 20.8843 3.21911 20.4973 2.36091 19.6391C1.50272 18.7809 1.11568 17.6886 0.930594 16.312C0.749976 14.9686 0.749987 13.2479 0.75 11.0572V10.9428C0.749987 8.75212 0.749976 7.03144 0.930594 5.68802C1.11568 4.31137 1.50272 3.21911 2.36091 2.36091C3.21911 1.50272 4.31137 1.11568 5.68802 0.930594C7.03144 0.749976 8.75212 0.749987 10.9428 0.75ZM8.75 19.7412C9.42149 19.7498 10.1673 19.75 11 19.75C13.2604 19.75 14.8802 19.7484 16.1121 19.5828C17.3224 19.4201 18.0454 19.1115 18.5784 18.5784C19.1115 18.0454 19.4201 17.3224 19.5828 16.1121C19.7484 14.8802 19.75 13.2604 19.75 11C19.75 10.1673 19.7498 9.42149 19.7412 8.75H8.75V19.7412ZM7.25 8.75V19.6993C6.74721 19.6746 6.29624 19.6377 5.8879 19.5828C4.67757 19.4201 3.95462 19.1115 3.42157 18.5784C2.88853 18.0454 2.57994 17.3224 2.41722 16.1121C2.25159 14.8802 2.25 13.2604 2.25 11C2.25 10.1673 2.25022 9.42149 2.25877 8.75H7.25ZM19.6993 7.25C19.6746 6.74721 19.6377 6.29624 19.5828 5.8879C19.4201 4.67757 19.1115 3.95462 18.5784 3.42157C18.0454 2.88853 17.3224 2.57994 16.1121 2.41722C14.8802 2.25159 13.2604 2.25 11 2.25C8.73963 2.25 7.11979 2.25159 5.8879 2.41722C4.67757 2.57994 3.95462 2.88853 3.42157 3.42157C2.88853 3.95462 2.57994 4.67757 2.41722 5.8879C2.36232 6.29624 2.32544 6.74721 2.30067 7.25H19.6993Z"
              fill={fillColor}
            />
          </Box>
        );

      case 3:
        return (
          <Box
            component="svg"
            width="20px"
            height="22px"
            viewBox="0 0 22 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <svg
              width="22"
              height="22"
              viewBox="0 0 22 22"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M5.69531 1C5.69531 0.585786 5.35953 0.25 4.94531 0.25C4.5311 0.25 4.19531 0.585786 4.19531 1V1.39544C3.31166 1.55215 2.57204 1.85363 1.97472 2.4604C1.30965 3.13597 1.01951 3.98842 0.882633 5.02257C0.74997 6.02489 0.749984 7.30319 0.75 8.90642V14.0164C0.749984 15.6196 0.74997 16.8979 0.882633 17.9003C1.01951 18.9344 1.30967 19.7869 1.97472 20.4625C2.64139 21.1397 3.48532 21.4366 4.50892 21.5764C5.49796 21.7115 6.75835 21.7114 8.3347 21.7114H9.28921C9.70342 21.7114 10.0392 21.3756 10.0392 20.9614C10.0392 20.5472 9.70342 20.2114 9.28921 20.2114H8.39112C6.74534 20.2114 5.58763 20.2098 4.71189 20.0902C3.85894 19.9737 3.38615 19.7581 3.04365 19.4102C2.69953 19.0606 2.48508 18.5755 2.36966 17.7034C2.25155 16.811 2.25 15.6322 2.25 13.9614V8.96143C2.25 7.29063 2.25155 6.11182 2.36966 5.21938C2.48509 4.34733 2.69954 3.86226 3.04366 3.51271C3.3098 3.24236 3.65461 3.05189 4.19531 2.92574V3C4.19531 3.41421 4.5311 3.75 4.94531 3.75C5.35953 3.75 5.69531 3.41421 5.69531 3V2.74778C6.41857 2.71215 7.29699 2.71143 8.39112 2.71143H9.19531V3C9.19531 3.41421 9.5311 3.75 9.94531 3.75C10.3595 3.75 10.6953 3.41421 10.6953 3V2.71143H11.3444C12.4752 2.71143 13.4124 2.71867 14.1953 2.76707V3C14.1953 3.41421 14.5311 3.75 14.9453 3.75C15.3595 3.75 15.6953 3.41421 15.6953 3V2.95638C16.3123 3.09536 16.7006 3.29881 16.9655 3.56789C17.3115 3.91932 17.5223 4.39264 17.6349 5.24661C17.75 6.11979 17.75 7.27495 17.75 8.93126V10.1479C17.75 10.5621 18.0858 10.8979 18.5 10.8979C18.9142 10.8979 19.25 10.5621 19.25 10.1479L19.25 8.82598C19.2501 7.26264 19.2502 6.02274 19.122 5.05052C18.9869 4.02589 18.6976 3.18926 18.0345 2.51557C17.43 1.90162 16.627 1.59299 15.6953 1.42677V1C15.6953 0.585786 15.3595 0.25 14.9453 0.25C14.5311 0.25 14.1953 0.585786 14.1953 1V1.26458C13.3645 1.21689 12.4139 1.21143 11.3444 1.21143L10.6953 1.21143V1C10.6953 0.585786 10.3595 0.25 9.94531 0.25C9.5311 0.25 9.19531 0.585786 9.19531 1V1.21143L8.33469 1.21143C7.33053 1.21141 6.45458 1.2114 5.69531 1.24631V1Z"
                fill={fillColor}
              />
              <path
                d="M5.25 9C5.25 8.58579 5.58579 8.25 6 8.25H14C14.4142 8.25 14.75 8.58579 14.75 9C14.75 9.41421 14.4142 9.75 14 9.75H6C5.58579 9.75 5.25 9.41421 5.25 9Z"
                fill={fillColor}
              />
              <path
                d="M5.25 14C5.25 13.5858 5.58579 13.25 6 13.25H10C10.4142 13.25 10.75 13.5858 10.75 14C10.75 14.4142 10.4142 14.75 10 14.75H6C5.58579 14.75 5.25 14.4142 5.25 14Z"
                fill={fillColor}
              />
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M18.8191 12.3204C19.3324 12.4613 19.8043 12.8083 20.2934 13.3502C20.5748 13.6091 20.8863 13.9348 21.0742 14.3682C21.2806 14.8445 21.305 15.3685 21.1485 15.9557L21.1369 15.9991L21.1202 16.0409C20.936 16.5016 20.5651 16.9034 20.2283 17.2407C20.0781 17.3913 19.932 17.5315 19.7845 17.6731C19.5538 17.8946 19.3194 18.1196 19.0602 18.3925L19.0513 18.4019L19.0421 18.411C18.5786 18.8663 18.1875 19.265 17.8488 19.6103C17.6961 19.766 17.5539 19.9109 17.4206 20.0453C17.026 20.4429 16.6525 20.8092 16.3432 20.9948C15.9171 21.2506 15.3792 21.3894 14.7622 21.5005L14.7502 21.5027L14.7382 21.5045C14.5559 21.5312 14.3563 21.563 14.1612 21.5941C13.9219 21.6322 13.6887 21.6694 13.5029 21.6948C13.3206 21.7197 13.1385 21.7403 12.9743 21.7473C12.8288 21.7535 12.6184 21.754 12.419 21.6932C11.8754 21.5277 11.7854 20.9924 11.7664 20.8532C11.737 20.6378 11.752 20.3998 11.7736 20.1968C11.8071 19.8823 11.8761 19.4991 11.9394 19.1479C11.9581 19.0437 11.9764 18.9423 11.993 18.8464C12.0852 18.197 12.2781 17.5547 12.5357 17.1308C12.5858 17.0454 12.6467 16.9735 12.6698 16.9462L12.6736 16.9417C12.7192 16.8876 12.7757 16.8245 12.8378 16.757C12.9631 16.6209 13.1305 16.446 13.3227 16.2487C13.7084 15.8531 14.2087 15.3527 14.7058 14.8616L14.7194 14.8482L14.7336 14.8355C14.9104 14.6778 15.1612 14.4167 15.4556 14.1103C15.6258 13.9331 15.8107 13.7407 16.004 13.5446C16.2521 13.2929 16.5098 13.0404 16.7395 12.8436C16.8537 12.7457 16.9749 12.6494 17.0945 12.5713C17.1804 12.5152 17.3354 12.4203 17.5262 12.377C17.8564 12.2797 18.3011 12.1782 18.8191 12.3204ZM17.9232 13.8239C18.1934 13.7428 18.3092 13.7359 18.422 13.7669C18.5484 13.8016 18.7932 13.9218 19.2002 14.3778L19.226 14.4067L19.2546 14.4327C19.5091 14.6648 19.6356 14.821 19.6979 14.9648C19.7453 15.0741 19.7801 15.2328 19.7116 15.5198C19.6434 15.6616 19.4837 15.8635 19.1667 16.1811C19.0616 16.2864 18.934 16.4093 18.7941 16.5439C18.5428 16.7859 18.2519 17.066 17.9816 17.35C17.5123 17.8114 17.1058 18.2257 16.7655 18.5726C16.6162 18.7248 16.4794 18.8642 16.3559 18.9887C15.9145 19.4334 15.6844 19.6408 15.5712 19.7087C15.3949 19.8146 15.0907 19.9166 14.5081 20.0222C14.2776 20.0561 14.0765 20.0884 13.8913 20.1181C13.6805 20.152 13.4901 20.1826 13.2999 20.2086L13.2827 20.2109C13.3125 19.9881 13.3579 19.7354 13.4074 19.4607C13.4288 19.3415 13.451 19.2178 13.473 19.091L13.4751 19.0789L13.4768 19.0669C13.5521 18.5286 13.7006 18.1069 13.8129 17.9176L13.8206 17.9084C13.8458 17.8784 13.8857 17.8335 13.9416 17.7727C14.0524 17.6523 14.2082 17.4893 14.3968 17.2958C14.7699 16.9131 15.2575 16.4252 15.7472 15.9413C15.9653 15.7446 16.284 15.4134 16.6044 15.0802C16.764 14.9144 16.924 14.748 17.0723 14.5975C17.3146 14.3517 17.536 14.1365 17.7157 13.9825C17.8061 13.905 17.8721 13.855 17.9149 13.827L17.9169 13.8258L17.9232 13.8239Z"
                fill={fillColor}
              />
            </svg>
          </Box>
        );

      case 4:
        return (
          <Box
            component="svg"
            width="20px"
            height="22px"
            viewBox="0 0 22 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12 6.25H10.9747C10.5303 6.24999 10.1592 6.24999 9.85464 6.27077C9.53754 6.29241 9.23801 6.33905 8.94762 6.45933C8.27379 6.73844 7.73844 7.27379 7.45933 7.94762C7.33905 8.23801 7.29241 8.53754 7.27077 8.85464C7.24999 9.15925 7.24999 9.53029 7.25 9.97475V12.0253C7.24999 12.4697 7.24999 12.8408 7.27077 13.1454C7.29241 13.4625 7.33905 13.762 7.45933 14.0524C7.73844 14.7262 8.27379 15.2616 8.94762 15.5407C9.23801 15.661 9.53754 15.7076 9.85464 15.7292C10.1592 15.75 10.5303 15.75 10.9747 15.75H12C13.5188 15.75 14.75 14.5188 14.75 13C14.75 12.5858 14.4142 12.25 14 12.25C13.5858 12.25 13.25 12.5858 13.25 13C13.25 13.6904 12.6904 14.25 12 14.25H11C10.5238 14.25 10.2042 14.2496 9.95674 14.2327C9.71601 14.2163 9.5988 14.1868 9.52165 14.1549C9.21536 14.028 8.97202 13.7846 8.84515 13.4784C8.81319 13.4012 8.78372 13.284 8.76729 13.0433C8.75041 12.7958 8.75 12.4762 8.75 12V10C8.75 9.5238 8.75041 9.20421 8.76729 8.95674C8.78372 8.71602 8.81319 8.5988 8.84515 8.52165C8.97202 8.21536 9.21536 7.97202 9.52165 7.84515C9.5988 7.81319 9.71602 7.78372 9.95674 7.76729C10.2042 7.75041 10.5238 7.75 11 7.75H12C12.6904 7.75 13.25 8.30964 13.25 9C13.25 9.41421 13.5858 9.75 14 9.75C14.4142 9.75 14.75 9.41421 14.75 9C14.75 7.48122 13.5188 6.25 12 6.25Z"
              fill={fillColor}
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M11 0.25C5.06294 0.25 0.25 5.06294 0.25 11C0.25 16.9371 5.06294 21.75 11 21.75C16.9371 21.75 21.75 16.9371 21.75 11C21.75 5.06294 16.9371 0.25 11 0.25ZM1.75 11C1.75 5.89137 5.89137 1.75 11 1.75C16.1086 1.75 20.25 5.89137 20.25 11C20.25 16.1086 16.1086 20.25 11 20.25C5.89137 20.25 1.75 16.1086 1.75 11Z"
              fill={fillColor}
            />
          </Box>
        );

      case 5:
        return (
          <Box
            component="svg"
            width="20px"
            height="22px"
            viewBox="0 0 22 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1.75 8.91886C1.75 4.9668 4.98871 1.75 9 1.75C13.0113 1.75 16.25 4.9668 16.25 8.91886C16.25 10.27 15.8727 11.532 15.2165 12.61C15.0011 12.9638 15.1134 13.4253 15.4672 13.6406C15.821 13.856 16.2824 13.7438 16.4978 13.39C17.2926 12.0843 17.75 10.5535 17.75 8.91886C17.75 4.12399 13.8253 0.25 9 0.25C4.17474 0.25 0.25 4.12399 0.25 8.91886C0.25 10.5535 0.707402 12.0843 1.50222 13.39C1.7176 13.7438 2.17902 13.856 2.53283 13.6406C2.88665 13.4253 2.99887 12.9638 2.7835 12.61C2.1273 11.532 1.75 10.27 1.75 8.91886Z"
              fill={fillColor}
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M5.15428 14.25C5.02405 14.25 4.89562 14.25 4.78741 14.2564C4.67317 14.2631 4.51965 14.2793 4.35973 14.3415C3.86202 14.5351 3.52666 15.0038 3.50126 15.5355C3.4931 15.7063 3.5261 15.8567 3.55577 15.9673C3.58387 16.0721 3.62442 16.1942 3.66565 16.3183L3.697 16.4128C3.84109 16.8475 3.95351 17.1867 4.13467 17.473C4.42626 17.9339 4.84611 18.2945 5.3378 18.5134L5.41565 18.903C5.53507 19.5025 5.62815 19.9699 5.84747 20.3567C6.18429 20.9506 6.73005 21.398 7.37854 21.6118C7.80078 21.751 8.27733 21.7507 8.88866 21.7502L8.99999 21.7501L9.11133 21.7502C9.72265 21.7507 10.1992 21.751 10.6214 21.6118C11.2699 21.398 11.8157 20.9506 12.1525 20.3567C12.3718 19.9699 12.4649 19.5025 12.5843 18.903L12.6622 18.5134C13.1539 18.2945 13.5737 17.9339 13.8653 17.473C14.0465 17.1867 14.1589 16.8475 14.303 16.4128L14.3343 16.3183C14.3755 16.1942 14.4161 16.0721 14.4442 15.9673C14.4739 15.8567 14.5069 15.7063 14.4987 15.5355C14.4733 15.0038 14.1379 14.5351 13.6402 14.3415C13.4803 14.2793 13.3268 14.2631 13.2126 14.2564C13.1044 14.25 12.976 14.25 12.8457 14.25H9.75V10C9.75 9.58579 9.41421 9.25 9 9.25C8.58579 9.25 8.25 9.58579 8.25 10V14.25L5.15428 14.25ZM7.15227 19.6167C7.07794 19.4857 7.02971 19.3099 6.9153 18.75H11.0847C10.9703 19.3099 10.922 19.4857 10.8477 19.6167C10.6946 19.8867 10.4465 20.0901 10.1518 20.1873C9.98923 20.2408 9.77673 20.2501 8.99999 20.2501C8.22325 20.2501 8.01075 20.2408 7.84821 20.1873C7.55344 20.0901 7.30537 19.8867 7.15227 19.6167ZM5.09463 15.8618L5.05768 15.7501L5.17156 15.75H12.8284L12.9423 15.7501L12.9053 15.8618C12.7227 16.4117 12.6677 16.5604 12.5977 16.6711C12.4262 16.9422 12.1578 17.1359 11.8488 17.2131C11.7229 17.2446 11.5659 17.25 10.9881 17.25H7.01185C6.43402 17.25 6.27707 17.2446 6.15121 17.2131C5.84216 17.1359 5.5738 16.9422 5.4023 16.6711C5.33228 16.5604 5.27725 16.4117 5.09463 15.8618Z"
              fill={fillColor}
            />
          </Box>
        );

      case 6:
        return (
          <Box
            component="svg"
            width="25px"
            height="22px"
            viewBox="0 0 22 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M12.75 2C12.75 1.58579 12.4142 1.25 12 1.25C11.5858 1.25 11.25 1.58579 11.25 2V2.77997C6.7395 3.14188 3.14188 6.7395 2.77997 11.25H2C1.58579 11.25 1.25 11.5858 1.25 12C1.25 12.4142 1.58579 12.75 2 12.75H2.77997C3.14188 17.2605 6.7395 20.8581 11.25 21.22V22C11.25 22.4142 11.5858 22.75 12 22.75C12.4142 22.75 12.75 22.4142 12.75 22V21.22C17.2605 20.8581 20.8581 17.2605 21.22 12.75H22C22.4142 12.75 22.75 12.4142 22.75 12C22.75 11.5858 22.4142 11.25 22 11.25H21.22C20.8581 6.7395 17.2605 3.14188 12.75 2.77997V2ZM5 12.75H4.28582C4.63935 16.4315 7.5685 19.3607 11.25 19.7142V19C11.25 18.5858 11.5858 18.25 12 18.25C12.4142 18.25 12.75 18.5858 12.75 19V19.7142C16.4315 19.3607 19.3607 16.4315 19.7142 12.75H19C18.5858 12.75 18.25 12.4142 18.25 12C18.25 11.5858 18.5858 11.25 19 11.25H19.7142C19.3607 7.5685 16.4315 4.63935 12.75 4.28582V5C12.75 5.41421 12.4142 5.75 12 5.75C11.5858 5.75 11.25 5.41421 11.25 5V4.28582C7.5685 4.63935 4.63935 7.5685 4.28582 11.25H5C5.41421 11.25 5.75 11.5858 5.75 12C5.75 12.4142 5.41421 12.75 5 12.75Z"
              fill={fillColor}
            />
            <circle cx="12" cy="12" r="2" fill={fillColor} />
          </Box>
        );
      case 7:
        return (
          <Box
            component="svg"
            width="20px"
            height="22px"
            viewBox="0 0 22 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M18.75 7.1004C18.7522 6.75077 18.5886 6.46652 18.4425 6.27536C18.2884 6.07373 18.0863 5.88759 17.8699 5.71803C17.435 5.37727 16.841 5.02559 16.1621 4.68051C14.7968 3.98654 12.977 3.26372 11.1123 2.66349C9.24899 2.06371 7.30601 1.57509 5.69427 1.36369C4.89107 1.25834 4.13915 1.21753 3.5071 1.27845C2.91058 1.33595 2.25571 1.49817 1.83126 1.95526C1.4196 2.39857 1.29271 3.05346 1.25964 3.64796C1.22444 4.28056 1.28785 5.03098 1.4141 5.83323C1.66737 7.44262 2.19243 9.3752 2.8212 11.2251C3.45027 13.076 4.19444 14.8772 4.89868 16.2231C5.24878 16.8921 5.60325 17.4763 5.94368 17.9016C6.11291 18.113 6.2991 18.3112 6.50071 18.4609C6.69083 18.6021 6.98111 18.7647 7.33719 18.7489C7.89112 18.7245 8.30691 18.42 8.60512 18.0329C8.88921 17.6642 9.10919 17.1705 9.30157 16.613C9.68698 15.4964 10.0481 13.8541 10.5104 11.7517L10.5124 11.7426C10.6114 11.2923 10.6902 11.1657 10.7425 11.1093C10.7913 11.0567 10.9012 10.9741 11.3249 10.8552C11.5838 10.7826 11.9767 10.7025 12.4784 10.6002C12.634 10.5685 12.8 10.5347 12.9758 10.4983C13.6933 10.3496 14.5313 10.1655 15.3293 9.92753C16.1174 9.69253 16.9196 9.38997 17.54 8.98418C18.1458 8.58792 18.7443 7.97857 18.75 7.1004ZM2.93044 2.97595C2.96452 2.93925 3.14202 2.82059 3.65101 2.77153C4.12448 2.7259 4.75123 2.75285 5.49919 2.85095C6.98977 3.04646 8.83907 3.50756 10.6527 4.09134C12.4649 4.67469 14.2068 5.36929 15.4824 6.01769C16.1239 6.34378 16.6203 6.64452 16.9448 6.89879C17.0958 7.0171 17.1883 7.10897 17.2391 7.17145C17.2059 7.30028 17.085 7.48938 16.7189 7.72887C16.2812 8.01511 15.6442 8.26836 14.9007 8.49008C14.1671 8.70883 13.3812 8.88239 12.6715 9.02945C12.521 9.06062 12.3717 9.09102 12.226 9.12069C11.7086 9.22601 11.2362 9.32217 10.9197 9.41097C10.4476 9.54343 9.98955 9.71531 9.64274 10.0892C9.29948 10.4593 9.15498 10.9313 9.04741 11.4204C8.5751 13.5684 8.23407 15.1084 7.88365 16.1237C7.70784 16.633 7.55119 16.9431 7.41689 17.1175C7.38473 17.1592 7.35767 17.188 7.33643 17.2078C7.28014 17.1565 7.20582 17.078 7.11469 16.9642C6.86168 16.6481 6.55902 16.1608 6.22773 15.5276C5.5692 14.2691 4.85359 12.5436 4.24141 10.7424C3.62892 8.94038 3.13125 7.09578 2.89586 5.60004C2.77778 4.84972 2.73037 4.21558 2.75732 3.73129C2.78638 3.2089 2.89459 3.01455 2.93044 2.97595ZM7.42445 17.276C7.42343 17.2755 7.42194 17.2747 7.41998 17.2738C7.4241 17.2763 7.42611 17.2772 7.42608 17.277C7.42607 17.277 7.42552 17.2766 7.42445 17.276Z"
              fill={fillColor}
            />
            <path
              d="M18.25 15.7C18.25 15.2858 17.9142 14.95 17.5 14.95C17.0858 14.95 16.75 15.2858 16.75 15.7V16.75H15.7C15.2858 16.75 14.95 17.0858 14.95 17.5C14.95 17.9142 15.2858 18.25 15.7 18.25H16.75V19.3C16.75 19.7142 17.0858 20.05 17.5 20.05C17.9142 20.05 18.25 19.7142 18.25 19.3V18.25H19.3C19.7142 18.25 20.05 17.9142 20.05 17.5C20.05 17.0858 19.7142 16.75 19.3 16.75H18.25V15.7Z"
              fill={fillColor}
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M17.5 12.25C14.6005 12.25 12.25 14.6005 12.25 17.5C12.25 20.3995 14.6005 22.75 17.5 22.75C20.3995 22.75 22.75 20.3995 22.75 17.5C22.75 14.6005 20.3995 12.25 17.5 12.25ZM13.75 17.5C13.75 15.4289 15.4289 13.75 17.5 13.75C19.5711 13.75 21.25 15.4289 21.25 17.5C21.25 19.5711 19.5711 21.25 17.5 21.25C15.4289 21.25 13.75 19.5711 13.75 17.5Z"
              fill={fillColor}
            />
          </Box>
        );
      case 8:
        return <Iconify icon="vaadin:area-select" color={fillColor} />;

      case 9:
        return (
          <Box
            component="svg"
            width="22px"
            height="22px"
            viewBox="0 0 22 22"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M16.2481 10.3496C14.8137 10.3496 13.6509 9.18679 13.6509 7.75239C13.6509 6.31798 14.8137 5.15516 16.2481 5.15516C17.6825 5.15516 18.8453 6.31798 18.8453 7.75239C18.8453 9.18679 17.6825 10.3496 16.2481 10.3496ZM15.1509 7.75239C15.1509 8.35837 15.6421 8.84961 16.2481 8.84961C16.8541 8.84961 17.3453 8.35837 17.3453 7.75239C17.3453 7.14641 16.8541 6.65516 16.2481 6.65516C15.6421 6.65516 15.1509 7.14641 15.1509 7.75239Z"
              fill={fillColor}
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M10.3935 5.27427C14.8521 0.749663 19.4561 0.775463 21.7986 1.82164C21.9673 1.89698 22.1022 2.03192 22.1776 2.20061C23.2238 4.54314 23.2495 9.14722 18.7248 13.6058C19.4748 14.7253 19.7684 15.8095 19.7491 16.815C19.7297 17.82 19.3993 18.6931 18.9884 19.3957C18.5784 20.0967 18.0779 20.6467 17.6858 21.0187C17.4884 21.206 17.3149 21.3515 17.1886 21.4518C17.1253 21.502 17.0736 21.5411 17.0362 21.5686C17.0175 21.5824 17.0024 21.5933 16.9912 21.6013L16.9774 21.6111L16.9728 21.6143L16.9711 21.6155C16.9707 21.6157 16.9697 21.6164 16.5438 20.9991L16.9697 21.6164C16.7597 21.7614 16.4903 21.7895 16.2548 21.6912C16.0193 21.5929 15.85 21.3815 15.8054 21.1303L15.7762 20.9654C15.6418 20.2041 15.5269 19.5532 15.2531 18.9709C14.9802 18.3905 14.5415 17.8712 13.6883 17.4813C13.6361 17.4574 13.5879 17.4284 13.5442 17.3949C13.3853 17.4837 13.2238 17.5721 13.0598 17.6601C12.8476 17.774 12.5935 17.779 12.377 17.6735C12.1604 17.5681 12.0076 17.365 11.9663 17.1277C11.8917 16.6985 11.3997 15.2993 10.0498 13.9494C8.69987 12.5995 7.30067 12.1075 6.87148 12.0329C6.63416 11.9916 6.43111 11.8388 6.32567 11.6223C6.22023 11.4057 6.22523 11.1516 6.33912 10.9394C6.42712 10.7754 6.51552 10.6139 6.6043 10.455C6.57083 10.4112 6.5417 10.363 6.51781 10.3107C6.12795 9.45742 5.60856 9.01876 5.02823 8.74588C4.44589 8.47204 3.79503 8.35715 3.03373 8.22277L2.86883 8.1936C2.61756 8.14897 2.40623 7.97963 2.30791 7.74413C2.20958 7.50863 2.23775 7.2393 2.38268 7.02924L3 7.45516C2.38268 7.02924 2.38246 7.02955 2.38268 7.02924L2.3836 7.02791L2.3848 7.02618L2.38803 7.02155L2.3978 7.00774C2.40577 6.99655 2.41668 6.98143 2.43046 6.96274C2.458 6.92538 2.4971 6.87364 2.54733 6.81037C2.64762 6.68402 2.79315 6.51057 2.98042 6.3132C3.35242 5.92111 3.90242 5.42054 4.60336 5.01061C5.30598 4.59969 6.17912 4.26921 7.18408 4.24991C8.18969 4.2306 9.27396 4.52422 10.3935 5.27427ZM9.36978 6.39903C8.56025 5.90045 7.83775 5.73764 7.21288 5.74964C6.52583 5.76283 5.90197 5.98883 5.36061 6.30543C5.01276 6.50886 4.70679 6.74528 4.45082 6.97427C4.85741 7.07324 5.27142 7.20267 5.66654 7.38846C6.35903 7.7141 6.98828 8.20644 7.48953 8.97149C8.10468 8.00727 8.73381 7.15329 9.36978 6.39903ZM15.0277 16.5097C15.9919 15.8946 16.8458 15.2655 17.6001 14.6295C18.0985 15.439 18.2613 16.1614 18.2493 16.7862C18.2361 17.4733 18.0101 18.0971 17.6935 18.6385C17.4901 18.9863 17.2537 19.2923 17.0247 19.5483C16.9257 19.1417 16.7963 18.7277 16.6105 18.3326C16.2849 17.6401 15.7926 17.0109 15.0277 16.5097ZM8.10252 10.8534C8.94085 11.1941 10.0525 11.8308 11.1105 12.8887C12.1684 13.9467 12.8051 15.0584 13.1458 15.8967C21.5824 11.0442 21.7561 5.40319 20.9166 3.08256C18.596 2.24312 12.9551 2.41683 8.10252 10.8534Z"
              fill={fillColor}
            />
            <path
              d="M6.73904 13.4687C7.03193 13.7616 7.03193 14.2365 6.73904 14.5294C6.28116 14.9872 5.44433 16.3712 5.86676 18.1323C7.6279 18.5548 9.01185 17.7179 9.46974 17.2601C9.76263 16.9672 10.2375 16.9672 10.5304 17.2601C10.8233 17.5529 10.8233 18.0278 10.5304 18.3207C9.756 19.0951 7.63831 20.3213 5.0237 19.4497C4.79975 19.3751 4.62401 19.1993 4.54936 18.9754C3.67782 16.3608 4.90398 14.2431 5.67838 13.4687C5.97127 13.1758 6.44615 13.1758 6.73904 13.4687Z"
              fill={fillColor}
            />
          </Box>
        );
      default:
        return null;
    }
  };

  const renderFinishStep = (
    <FinishSection onBackClicked={back} onStartGenerateClicked={createProject} loading={loading} />
  );

  if (activeStep < steps.length)
    return (
      <Grid
        container
        justifyContent="center"
        alignItems="center"
        height={{ sm: 1, md: '250vh' }}
        spacing={2}
      >
        <Grid
          item
          sm={12}
          md={3.5}
          alignSelf="stretch"
          bgcolor={{ md: 'transparent', xs: '#fff' }}
          height={1}
          sx={{}}
        >
          <Box
            sx={{
              position: { lg: 'fixed', md: 'relative' },
              px: { lg: 2, md: 2, sm: 2, xs: 2 },
              pt: { lg: 8, md: 2, sm: 2, xs: 2 },
              zIndex: 1,
              left: 0,
              top: -2,
              maxWidth: { md: 350, xs: 'unset' },
              height: 1,
              width: 1,
            }}
            bgcolor={{ md: '#fff', xs: 'transparent' }}
          >
            <Stack spacing={1} px={0} py={3} sx={{}}>
              <Typography variant="h6">New Project</Typography>
              <Typography variant="body2" color="#303135">
                You must complete the steps to create a project successfully
              </Typography>
              <MobileStepper
                variant="progress"
                steps={9}
                position="static"
                activeStep={activeStep}
                sx={{
                  width: 1,
                  display: 'flex',
                  flexGrow: 1,
                  bgcolor: 'transparent',
                  '& .MuiLinearProgress-root': {
                    width: 1,
                    height: 5,
                    mr: 1,
                  },
                }}
                backButton={undefined}
                nextButton={undefined}
              />
              {steps.map((item, i) => (
                <Step key={i + 1}>
                  <StepLabel
                    sx={{
                      '& .MuiStepLabel-label': {
                        color: i < activeStep ? '#000' : '#A9B2BC',
                        px: 2,
                        py: 0.5,
                        ...(i === activeStep
                          ? {
                              color: 'primary.main',
                              bgcolor: 'background.secondary',
                              padding: 2,
                              borderRadius: 2,
                              borderLeft: '2px solid',
                              borderColor: 'primary.main',
                            }
                          : {}),
                      },
                    }}
                  >
                    <Stack
                      direction="row"
                      alignItems="center"
                      justifyContent="space-between"
                      width={1}
                    >
                      <Stack alignItems="center" direction="row" spacing={2}>
                        {renderStepImage(
                          i + 1,
                          // eslint-disable-next-line no-nested-ternary
                          i === activeStep ? '#4E92FF' : i > activeStep ? '#A9B2BC' : '#1F2024'
                        )}
                        {item.label}
                      </Stack>
                      {i < activeStep && (
                        <Box
                          component="svg"
                          width="24px"
                          height="24px"
                          viewBox="0 0 24 24"
                          fill="none"
                          xmlns="http://www.w3.org/2000/Box "
                        >
                          <path
                            d="M3 12C3 13.1819 3.23279 14.3522 3.68508 15.4442C4.13738 16.5361 4.80031 17.5282 5.63604 18.364C6.47177 19.1997 7.46392 19.8626 8.55585 20.3149C9.64778 20.7672 10.8181 21 12 21C13.1819 21 14.3522 20.7672 15.4442 20.3149C16.5361 19.8626 17.5282 19.1997 18.364 18.364C19.1997 17.5282 19.8626 16.5361 20.3149 15.4442C20.7672 14.3522 21 13.1819 21 12C21 10.8181 20.7672 9.64778 20.3149 8.55585C19.8626 7.46392 19.1997 6.47177 18.364 5.63604C17.5282 4.80031 16.5361 4.13738 15.4442 3.68508C14.3522 3.23279 13.1819 3 12 3C10.8181 3 9.64778 3.23279 8.55585 3.68508C7.46392 4.13738 6.47177 4.80031 5.63604 5.63604C4.80031 6.47177 4.13738 7.46392 3.68508 8.55585C3.23279 9.64778 3 10.8181 3 12Z"
                            fill="#4E92FF"
                          />
                          <path d="M9 12L11 14L15 10" fill="#4E92FF" />
                          <path
                            d="M9 12L11 14L15 10M3 12C3 13.1819 3.23279 14.3522 3.68508 15.4442C4.13738 16.5361 4.80031 17.5282 5.63604 18.364C6.47177 19.1997 7.46392 19.8626 8.55585 20.3149C9.64778 20.7672 10.8181 21 12 21C13.1819 21 14.3522 20.7672 15.4442 20.3149C16.5361 19.8626 17.5282 19.1997 18.364 18.364C19.1997 17.5282 19.8626 16.5361 20.3149 15.4442C20.7672 14.3522 21 13.1819 21 12C21 10.8181 20.7672 9.64778 20.3149 8.55585C19.8626 7.46392 19.1997 6.47177 18.364 5.63604C17.5282 4.80031 16.5361 4.13738 15.4442 3.68508C14.3522 3.23279 13.1819 3 12 3C10.8181 3 9.64778 3.23279 8.55585 3.68508C7.46392 4.13738 6.47177 4.80031 5.63604 5.63604C4.80031 6.47177 4.13738 7.46392 3.68508 8.55585C3.23279 9.64778 3 10.8181 3 12Z"
                            stroke="#EBF3FF"
                            strokeWidth="2"
                            strokeLinecap="round"
                            strokeLinejoin="round"
                          />
                        </Box>
                      )}
                    </Stack>
                  </StepLabel>
                </Step>
              ))}
            </Stack>
          </Box>
        </Grid>
        <Grid item sm={12} md={8.5} alignSelf="stretch" height={1} p={4}>
          <Card
            sx={{
              width: 1,
              p: 4,
              m: 2,
              borderRadius: '25px',
            }}
          >
            {steps[activeStep].component}
          </Card>
        </Grid>
      </Grid>
    );

  return renderFinishStep;
}
